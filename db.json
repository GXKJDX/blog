{"meta":{"version":1,"warehouse":"5.0.0"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","path":"js/jquery-3.6.4.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1704989750716},{"_id":"source/_posts/test.md","hash":"9aa02cd6d9dd67e113bedc99d2c41f25d281d7ee","modified":1704989750717},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"82ce1e15ddeabeaaca60e2186b5a3ce42b1a9c49","modified":1704989745821},{"_id":"node_modules/hexo-theme-landscape/languages/de-DE.yml","hash":"d29d1c4256b7ed9df42f511c2ff0a23ad5fd6c1f","modified":1704989745823},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"fa2af55d8c61c53a364f4ea5fee417f35a173957","modified":1704989745822},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"6897a617c9fa46519ee265c0e69cf0d203318a43","modified":1704989745822},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"630df8733137bdf4f897e2bfa723ee9fb6adf38a","modified":1704989745873},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"d45cea36c5c83d7d09afcd1c26fff4a4c513c25b","modified":1704989745823},{"_id":"node_modules/hexo-theme-landscape/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1704989745825},{"_id":"node_modules/hexo-theme-landscape/languages/en-US.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1704989745826},{"_id":"node_modules/hexo-theme-landscape/languages/en-GB.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1704989745826},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1704989745827},{"_id":"node_modules/hexo-theme-landscape/languages/fr-FR.yml","hash":"8d09dbdab00a30a2870b56f7c0a7ca7deafa7b88","modified":1704989745829},{"_id":"node_modules/hexo-theme-landscape/languages/es-ES.yml","hash":"7008a8fc91f18d2a735864817b8ebda30c7a2c66","modified":1704989745828},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"e3b4937da4cd2d0393b8a0ba310e70fc605cc431","modified":1704989745829},{"_id":"node_modules/hexo-theme-landscape/languages/hu-HU.yml","hash":"712d18664898fa21ba38d4973e90ef41a324ea25","modified":1704989745831},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"8cb0fe4b6913b4d5b662cdd0108a923c90025f85","modified":1704989745830},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"d22ec72d00567db3782661ab5ccdb2475469da4c","modified":1704989745831},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"7f09aa0520688e2de50cb5b6631998682f9200f5","modified":1704989745833},{"_id":"node_modules/hexo-theme-landscape/languages/it-IT.yml","hash":"2cb6dc2fab9bd2dbe1c8bb869a9e8bf85a564fdd","modified":1704989745832},{"_id":"node_modules/hexo-theme-landscape/languages/ja-JP.yml","hash":"08481267e0c112e1f6855620f2837ec4c4a98bbd","modified":1704989745833},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"3e2fedca096678c0c234ebffa4637828979296fa","modified":1704989745834},{"_id":"node_modules/hexo-theme-landscape/languages/ko-KR.yml","hash":"19209ad8f9d4057e8df808937f950eb265e1db69","modified":1704989745835},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"11330316e3c1262474a2b496e40dbc29f93fe01b","modified":1704989745835},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1704989745838},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"088c2507d8f221416f99cf72d73641ba476a0f00","modified":1704989745837},{"_id":"node_modules/hexo-theme-landscape/languages/mn-MN.yml","hash":"b9e5f3e7c0c2f779cf2cfded6db847b5941637ca","modified":1704989745836},{"_id":"node_modules/hexo-theme-landscape/languages/nl-NL.yml","hash":"5ebbc30021f05d99938f96dfff280392df7f91f0","modified":1704989745837},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1704989745839},{"_id":"node_modules/hexo-theme-landscape/languages/pt-PT.yml","hash":"0f852b6b228e6ea59aa3540574bb89b233f2a098","modified":1704989745840},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"ae2c61b30e638f74f1a42c9ce39ac08d063b30f5","modified":1704989745840},{"_id":"node_modules/hexo-theme-landscape/languages/ru-RU.yml","hash":"360d11a28bb768afb1dd15f63fa7fd3a8cc547ee","modified":1704989745841},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1704989745842},{"_id":"node_modules/hexo-theme-landscape/languages/th-TH.yml","hash":"ebfdba9bc4842c829473c1e6e4544344f182724d","modified":1704989745842},{"_id":"node_modules/hexo-theme-landscape/languages/th.yml","hash":"84a55b00aa01f03982be294e43c33a20e6d32862","modified":1704989745843},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"e41d1e0e3a9e15c30b7142491bed39dc50371e96","modified":1704989745845},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"424f6e94ced575b51bb7dcebdc0f25d4f4c99fe2","modified":1704989745844},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1704989745866},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"113012153240fa62a2dffc85b1dd6a476609670a","modified":1704989745875},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1704989745867},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1704989745845},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1704989745867},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1704989745870},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"99ad49cb7ee932c62ab0ef3a4de71f7e7e8c6bed","modified":1704989745868},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"ee1ac7ba2b46b7e59d46b20a42f0b590efd50359","modified":1704989745847},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1704989745871},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1704989745872},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"5062c723721d8497eebad372f57092ade45041f4","modified":1704989745848},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"e1854416d49a56048a81ee9c08db69fb07698916","modified":1704989745849},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"403e107162a13bd8db2fc97f2f85df5b235f9308","modified":1704989745850},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"d3f1ba491f5dc75f5fd657392293d52f8438ea1e","modified":1704989745849},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"165008f72ed77f0da879d132563d763369d26472","modified":1704989745851},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"57db292850074c1cfc779c6e9ebbc16a5eb6ab5a","modified":1704989745853},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"9fc18f1fd5bec16f8a3d30b0ce38458485c398b3","modified":1704989745852},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"892a5b524a508f395f6d72cb6721f0a3db14d4d7","modified":1704989745853},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"347cf1befd2ea637c24bd5901929d8e36e359e75","modified":1704989745855},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"c70869569749a8f48cce202fa57926c06b55fdab","modified":1704989745861},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"0fe1e52c291c9499bd05b966e0b9aac5be351c58","modified":1704989745862},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"866790acc13fed44b7ef74c3e19c300a3d6180d8","modified":1704989745862},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1704989745877},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"98c85af1103af18b02c4f5f207fdfc48e207d794","modified":1704989745863},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"a4b3530798b0a7a23d31fb0b86b530fcc2fce87a","modified":1704989745891},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"7259c179aa0c41c02e467ad892292e90430aaabc","modified":1704989745865},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"6017c54a8c3c8ff8db491cfbea3100c139da75d6","modified":1704989745863},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"15535c222f5a689c255c77722d2334bb1ac97a7e","modified":1704989745897},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"0b5bd5ce6783a733607a62c5273486d8893571c6","modified":1704989745902},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1704989745898},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"16128d2422645e18d1b6882d4c4df17d895bd76e","modified":1704989745856},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"cbb3819ce512bd24db8bad41b8617d46eba82fdc","modified":1704989745858},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"e78bda05fcf57b0e5e3a20cf3505d37fd69aaf46","modified":1704989745856},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1704989745857},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"fd5d3187f4e3d45f8af08f93b263fca7ed666c75","modified":1704989745860},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"ae76862ec15f0bc6e52ddce986305991ebff5b18","modified":1704989745879},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"9e574d8eb1a5285ec3b4346607414770d2f7e0ff","modified":1704989745878},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"2834870661e490775f9154d71638bfdc72e640a6","modified":1704989745880},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1704989745859},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"6f7aa810f296d6a1a4486637b5a853d35a198938","modified":1704989745881},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"04838b4b2ca4788700c48449e5fb6790d18c0f2e","modified":1704989745883},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"403c39c7bb1caa1f3b142207b59aa0567f898a31","modified":1704989745882},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1704989745889},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"680c7b809b62cd3ad294e822793fbd0b1a32cc33","modified":1704989745883},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"1fb15f13ba70d5b954f62920c6b63d26e2fb2985","modified":1704989745885},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1704989745890},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"8d971a00e644a600179b04815688d188f094012e","modified":1704989745888},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"4132e25ba9680c4b911a01abc75f501cda3fa4f1","modified":1704989745887},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","hash":"edf8a6a066f201b1ffad32c585bd79c9982d4433","modified":1704989745901},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"eef46b6fb2e460838cd7328a6e13ecda0cb1e194","modified":1704989745899},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1704989745895},{"_id":"public/2024/01/12/hello-world/index.html","hash":"6e094b2e3f6b95c5a4d843d495273b3c65e22b28","modified":1705764750167},{"_id":"public/2024/01/11/test/index.html","hash":"bad172475c5b6b9aeb0f540f1476b0fcb87a9982","modified":1705764750167},{"_id":"public/archives/index.html","hash":"13b95412c274c13a5dee2735e7b56b751c7812b8","modified":1705764750167},{"_id":"public/archives/2024/index.html","hash":"7ad85634707a43b6c8c183ba6947833c7af2b9a6","modified":1705764750167},{"_id":"public/archives/2024/01/index.html","hash":"1eb542b65ea9e68d13b39889ce6ad85e96a13016","modified":1705764750167},{"_id":"public/index.html","hash":"09c938067f418aaf94319c6e9b4c68888d7f54f4","modified":1705764750167},{"_id":"public/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1704991328191},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1704991328191},{"_id":"public/css/style.css","hash":"ddb3792605d744ab3d9f0a649c82b62e9b16daa6","modified":1704991328191},{"_id":"public/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1704991328191},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1704991328191},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1704991328191},{"_id":"source/2024_1/Docker.md","hash":"d0fd047ad02bb302d2f54705c8c3ffbca6006deb","modified":1705680019820},{"_id":"source/2024_1/Nginx.md","hash":"64854b2d893322068a3aafdc5540ef646bd70997","modified":1705672961965},{"_id":"public/2024_1/Docker.html","hash":"e44c0f9f878721c5ab260dcd4729c50edbb33966","modified":1705764311671},{"_id":"public/2024_1/Nginx.html","hash":"c11d66ac83f13ed0afd61ac74b0c25c563618bb8","modified":1705764311671},{"_id":"source/_posts/Docker.md","hash":"f22d56002cae0c0c32c92daf5b45530a3f55d26a","modified":1705764732015},{"_id":"source/_posts/Nginx.md","hash":"14cbd053bf8cac750b6c83dea53d7c1c6114eca2","modified":1705764692906},{"_id":"public/2024/01/20/Nginx/index.html","hash":"a0d5afab7e1173ecba5c00d6ca90185b5307c24c","modified":1705764750167},{"_id":"public/2024/01/20/Docker/index.html","hash":"8b95d3cb3943602c66b492b67707451f685d4eb5","modified":1705764750167}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2024-01-11T16:15:50.716Z","updated":"2024-01-11T16:15:50.716Z","comments":1,"layout":"post","photos":[],"_id":"clr9ftd2t00003ctl83y49rpu","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"test","date":"2024-01-11T14:37:50.000Z","_content":"\n### 页面信息初始化\nhexo学习记录\n\nhexo new \"test\" 生成新的文档\n\nhexo g 重新编译代码\n\nhexo s 运行项目\n\nhexo d 部署到git仓库\n\n\n","source":"_posts/test.md","raw":"---\ntitle: test\ndate: 2024-01-11 22:37:50\ntags:\n---\n\n### 页面信息初始化\nhexo学习记录\n\nhexo new \"test\" 生成新的文档\n\nhexo g 重新编译代码\n\nhexo s 运行项目\n\nhexo d 部署到git仓库\n\n\n","slug":"test","published":1,"updated":"2024-01-11T16:15:50.717Z","comments":1,"layout":"post","photos":[],"_id":"clr9ftd2z00013ctl6xdt5wfh","content":"<h3 id=\"页面信息初始化\"><a href=\"#页面信息初始化\" class=\"headerlink\" title=\"页面信息初始化\"></a>页面信息初始化</h3><p>hexo学习记录</p>\n<p>hexo new “test” 生成新的文档</p>\n<p>hexo g 重新编译代码</p>\n<p>hexo s 运行项目</p>\n<p>hexo d 部署到git仓库</p>\n","excerpt":"","more":"<h3 id=\"页面信息初始化\"><a href=\"#页面信息初始化\" class=\"headerlink\" title=\"页面信息初始化\"></a>页面信息初始化</h3><p>hexo学习记录</p>\n<p>hexo new “test” 生成新的文档</p>\n<p>hexo g 重新编译代码</p>\n<p>hexo s 运行项目</p>\n<p>hexo d 部署到git仓库</p>\n"},{"title":"Docker基础知识","date":"2024-01-20T14:32:50.000Z","_content":"\n## 一、Docker学习记录\n\n对于刚开始学习 Docker 的初学者来说，以下是一系列推荐的步骤和概念，可以帮助您建立对 Docker 的基本理解并开始实践：\n\n### 1. 理解 Docker 的基本概念\n\n- **容器（Containers）**：轻量级、可执行的独立软件包，包含运行应用所需的一切：代码、运行时、库、环境变量和配置文件。\n- **镜像（Images）**：容器的蓝图，包含创建容器所需的指令。\n- **Dockerfile**：一种脚本，包含了一系列指令和步骤，用于创建 Docker 镜像。\n\n### 2. 运行您的第一个容器\n\n- 通过运行一个简单的容器来开始，例如 hello-world镜像：\n\n  ```shell\n  docker run hello-world\n  ```\n\n  这个命令会下载一个测试镜像并在容器中运行它。\n\n### 3. 学习 Docker 基本命令\n\n- 熟悉常用的 Docker 命令：\n  - `docker run`：运行一个容器。\n  - `docker ps`：列出运行中的容器。\n  - `docker images`：列出本地存储的镜像。\n  - `docker pull`：从 Docker Hub 下载一个镜像。\n  - `docker build`：根据 Dockerfile 构建一个新镜像。\n  - `docker rm`：删除一个或多个容器。\n  - `docker rmi`：删除一个或多个镜像。\n\n### 4. 实践构建自己的 Docker 镜像\n\n- 学习编写 Dockerfile 并构建自己的镜像：\n  - 创建一个简单的 Dockerfile，例如，设置基础镜像，复制文件，设置工作目录和启动命令。\n  - 使用 `docker build` 命令构建镜像。\n\n### 5. 学习容器的网络和存储\n\n- 了解如何使用 Docker 网络来连接容器。\n- 学习如何使用卷（Volumes）持久化容器数据。\n\n### 6. 使用 Docker Compose\n\n- Docker Compose 允许您使用 YAML 文件定义多容器应用。\n- 学习编写 `docker-compose.yml` 文件并使用 `docker-compose up` 和 `docker-compose down` 来管理应用。\n\n## 二、安装docker\n\n在 CentOS 7.8 上使用阿里云的 Docker 仓库来安装 Docker，您可以按照以下步骤进行：\n\n### 1：安装必要的依赖包\n\n首先，安装一些必要的软件包，这些软件包允许您通过 HTTPS 使用仓库：\n\n```sh\nsudo yum install -y yum-utils device-mapper-persistent-data lvm2\n```\n\n### 2：设置阿里云 Docker 仓库\n\n要使用阿里云的 Docker 仓库，您需要添加阿里云的 Docker 仓库地址。通常，您可以在阿里云的容器服务页面获取专属于您账户的 Docker 仓库地址。以下是一个示例命令，但请使用您的实际阿里云 Docker 仓库地址：\n\n```sh\nsudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n```\n\n### 3：安装 Docker Engine\n\n现在，从阿里云仓库安装 Docker：\n\n```sh\nsudo yum install docker-ce docker-ce-cli containerd.io\n```\n\n### 4：启动 Docker\n\n安装完成后，启动 Docker 服务：\n\n```sh\nsudo systemctl start docker\n```\n\n### 5：验证安装\n\n运行 hello-world 镜像来验证 Docker 是否正确安装，通常在这里是不会有信息响应，因为还需要拉取镜像：\n\n```sh\nsudo docker run hello-world\n```\n\n如果能看到欢迎信息，说明 Docker 已经正确安装和运行。\n\n### 6：使 Docker 开机自启\n\n为了确保 Docker 在启动时自动启动，请使用：\n\n```sh\nsudo systemctl enable docker\n```\n\n### 7：（可选）添加非 root 用户到 Docker 组\n\n为了避免每次运行 Docker 命令时都使用 `sudo`，您可以将您的用户添加到 `docker` 组：\n\n```sh\nsudo usermod -aG docker $USER\n```\n\n这里的 `-aG` 选项意味着将用户添加到 `docker` 组并保留其在其他组的成员资格。注销并重新登录后，您可以以非 root 用户身份运行 Docker 命令。\n\n","source":"_posts/Docker.md","raw":"---\ntitle: Docker基础知识\ndate: 2024-01-20 22:32:50\ntags:\n---\n\n## 一、Docker学习记录\n\n对于刚开始学习 Docker 的初学者来说，以下是一系列推荐的步骤和概念，可以帮助您建立对 Docker 的基本理解并开始实践：\n\n### 1. 理解 Docker 的基本概念\n\n- **容器（Containers）**：轻量级、可执行的独立软件包，包含运行应用所需的一切：代码、运行时、库、环境变量和配置文件。\n- **镜像（Images）**：容器的蓝图，包含创建容器所需的指令。\n- **Dockerfile**：一种脚本，包含了一系列指令和步骤，用于创建 Docker 镜像。\n\n### 2. 运行您的第一个容器\n\n- 通过运行一个简单的容器来开始，例如 hello-world镜像：\n\n  ```shell\n  docker run hello-world\n  ```\n\n  这个命令会下载一个测试镜像并在容器中运行它。\n\n### 3. 学习 Docker 基本命令\n\n- 熟悉常用的 Docker 命令：\n  - `docker run`：运行一个容器。\n  - `docker ps`：列出运行中的容器。\n  - `docker images`：列出本地存储的镜像。\n  - `docker pull`：从 Docker Hub 下载一个镜像。\n  - `docker build`：根据 Dockerfile 构建一个新镜像。\n  - `docker rm`：删除一个或多个容器。\n  - `docker rmi`：删除一个或多个镜像。\n\n### 4. 实践构建自己的 Docker 镜像\n\n- 学习编写 Dockerfile 并构建自己的镜像：\n  - 创建一个简单的 Dockerfile，例如，设置基础镜像，复制文件，设置工作目录和启动命令。\n  - 使用 `docker build` 命令构建镜像。\n\n### 5. 学习容器的网络和存储\n\n- 了解如何使用 Docker 网络来连接容器。\n- 学习如何使用卷（Volumes）持久化容器数据。\n\n### 6. 使用 Docker Compose\n\n- Docker Compose 允许您使用 YAML 文件定义多容器应用。\n- 学习编写 `docker-compose.yml` 文件并使用 `docker-compose up` 和 `docker-compose down` 来管理应用。\n\n## 二、安装docker\n\n在 CentOS 7.8 上使用阿里云的 Docker 仓库来安装 Docker，您可以按照以下步骤进行：\n\n### 1：安装必要的依赖包\n\n首先，安装一些必要的软件包，这些软件包允许您通过 HTTPS 使用仓库：\n\n```sh\nsudo yum install -y yum-utils device-mapper-persistent-data lvm2\n```\n\n### 2：设置阿里云 Docker 仓库\n\n要使用阿里云的 Docker 仓库，您需要添加阿里云的 Docker 仓库地址。通常，您可以在阿里云的容器服务页面获取专属于您账户的 Docker 仓库地址。以下是一个示例命令，但请使用您的实际阿里云 Docker 仓库地址：\n\n```sh\nsudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n```\n\n### 3：安装 Docker Engine\n\n现在，从阿里云仓库安装 Docker：\n\n```sh\nsudo yum install docker-ce docker-ce-cli containerd.io\n```\n\n### 4：启动 Docker\n\n安装完成后，启动 Docker 服务：\n\n```sh\nsudo systemctl start docker\n```\n\n### 5：验证安装\n\n运行 hello-world 镜像来验证 Docker 是否正确安装，通常在这里是不会有信息响应，因为还需要拉取镜像：\n\n```sh\nsudo docker run hello-world\n```\n\n如果能看到欢迎信息，说明 Docker 已经正确安装和运行。\n\n### 6：使 Docker 开机自启\n\n为了确保 Docker 在启动时自动启动，请使用：\n\n```sh\nsudo systemctl enable docker\n```\n\n### 7：（可选）添加非 root 用户到 Docker 组\n\n为了避免每次运行 Docker 命令时都使用 `sudo`，您可以将您的用户添加到 `docker` 组：\n\n```sh\nsudo usermod -aG docker $USER\n```\n\n这里的 `-aG` 选项意味着将用户添加到 `docker` 组并保留其在其他组的成员资格。注销并重新登录后，您可以以非 root 用户身份运行 Docker 命令。\n\n","slug":"Docker","published":1,"updated":"2024-01-20T15:32:12.015Z","_id":"clrm844iy000010tl9xu0c4a6","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"一、Docker学习记录\"><a href=\"#一、Docker学习记录\" class=\"headerlink\" title=\"一、Docker学习记录\"></a>一、Docker学习记录</h2><p>对于刚开始学习 Docker 的初学者来说，以下是一系列推荐的步骤和概念，可以帮助您建立对 Docker 的基本理解并开始实践：</p>\n<h3 id=\"1-理解-Docker-的基本概念\"><a href=\"#1-理解-Docker-的基本概念\" class=\"headerlink\" title=\"1. 理解 Docker 的基本概念\"></a>1. 理解 Docker 的基本概念</h3><ul>\n<li><strong>容器（Containers）</strong>：轻量级、可执行的独立软件包，包含运行应用所需的一切：代码、运行时、库、环境变量和配置文件。</li>\n<li><strong>镜像（Images）</strong>：容器的蓝图，包含创建容器所需的指令。</li>\n<li><strong>Dockerfile</strong>：一种脚本，包含了一系列指令和步骤，用于创建 Docker 镜像。</li>\n</ul>\n<h3 id=\"2-运行您的第一个容器\"><a href=\"#2-运行您的第一个容器\" class=\"headerlink\" title=\"2. 运行您的第一个容器\"></a>2. 运行您的第一个容器</h3><ul>\n<li><p>通过运行一个简单的容器来开始，例如 hello-world镜像：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run hello-world</span><br></pre></td></tr></table></figure>\n\n<p>这个命令会下载一个测试镜像并在容器中运行它。</p>\n</li>\n</ul>\n<h3 id=\"3-学习-Docker-基本命令\"><a href=\"#3-学习-Docker-基本命令\" class=\"headerlink\" title=\"3. 学习 Docker 基本命令\"></a>3. 学习 Docker 基本命令</h3><ul>\n<li>熟悉常用的 Docker 命令：<ul>\n<li><code>docker run</code>：运行一个容器。</li>\n<li><code>docker ps</code>：列出运行中的容器。</li>\n<li><code>docker images</code>：列出本地存储的镜像。</li>\n<li><code>docker pull</code>：从 Docker Hub 下载一个镜像。</li>\n<li><code>docker build</code>：根据 Dockerfile 构建一个新镜像。</li>\n<li><code>docker rm</code>：删除一个或多个容器。</li>\n<li><code>docker rmi</code>：删除一个或多个镜像。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-实践构建自己的-Docker-镜像\"><a href=\"#4-实践构建自己的-Docker-镜像\" class=\"headerlink\" title=\"4. 实践构建自己的 Docker 镜像\"></a>4. 实践构建自己的 Docker 镜像</h3><ul>\n<li>学习编写 Dockerfile 并构建自己的镜像：<ul>\n<li>创建一个简单的 Dockerfile，例如，设置基础镜像，复制文件，设置工作目录和启动命令。</li>\n<li>使用 <code>docker build</code> 命令构建镜像。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-学习容器的网络和存储\"><a href=\"#5-学习容器的网络和存储\" class=\"headerlink\" title=\"5. 学习容器的网络和存储\"></a>5. 学习容器的网络和存储</h3><ul>\n<li>了解如何使用 Docker 网络来连接容器。</li>\n<li>学习如何使用卷（Volumes）持久化容器数据。</li>\n</ul>\n<h3 id=\"6-使用-Docker-Compose\"><a href=\"#6-使用-Docker-Compose\" class=\"headerlink\" title=\"6. 使用 Docker Compose\"></a>6. 使用 Docker Compose</h3><ul>\n<li>Docker Compose 允许您使用 YAML 文件定义多容器应用。</li>\n<li>学习编写 <code>docker-compose.yml</code> 文件并使用 <code>docker-compose up</code> 和 <code>docker-compose down</code> 来管理应用。</li>\n</ul>\n<h2 id=\"二、安装docker\"><a href=\"#二、安装docker\" class=\"headerlink\" title=\"二、安装docker\"></a>二、安装docker</h2><p>在 CentOS 7.8 上使用阿里云的 Docker 仓库来安装 Docker，您可以按照以下步骤进行：</p>\n<h3 id=\"1：安装必要的依赖包\"><a href=\"#1：安装必要的依赖包\" class=\"headerlink\" title=\"1：安装必要的依赖包\"></a>1：安装必要的依赖包</h3><p>首先，安装一些必要的软件包，这些软件包允许您通过 HTTPS 使用仓库：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2：设置阿里云-Docker-仓库\"><a href=\"#2：设置阿里云-Docker-仓库\" class=\"headerlink\" title=\"2：设置阿里云 Docker 仓库\"></a>2：设置阿里云 Docker 仓库</h3><p>要使用阿里云的 Docker 仓库，您需要添加阿里云的 Docker 仓库地址。通常，您可以在阿里云的容器服务页面获取专属于您账户的 Docker 仓库地址。以下是一个示例命令，但请使用您的实际阿里云 Docker 仓库地址：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3：安装-Docker-Engine\"><a href=\"#3：安装-Docker-Engine\" class=\"headerlink\" title=\"3：安装 Docker Engine\"></a>3：安装 Docker Engine</h3><p>现在，从阿里云仓库安装 Docker：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4：启动-Docker\"><a href=\"#4：启动-Docker\" class=\"headerlink\" title=\"4：启动 Docker\"></a>4：启动 Docker</h3><p>安装完成后，启动 Docker 服务：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl start docker</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5：验证安装\"><a href=\"#5：验证安装\" class=\"headerlink\" title=\"5：验证安装\"></a>5：验证安装</h3><p>运行 hello-world 镜像来验证 Docker 是否正确安装，通常在这里是不会有信息响应，因为还需要拉取镜像：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run hello-world</span><br></pre></td></tr></table></figure>\n\n<p>如果能看到欢迎信息，说明 Docker 已经正确安装和运行。</p>\n<h3 id=\"6：使-Docker-开机自启\"><a href=\"#6：使-Docker-开机自启\" class=\"headerlink\" title=\"6：使 Docker 开机自启\"></a>6：使 Docker 开机自启</h3><p>为了确保 Docker 在启动时自动启动，请使用：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> docker</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7：（可选）添加非-root-用户到-Docker-组\"><a href=\"#7：（可选）添加非-root-用户到-Docker-组\" class=\"headerlink\" title=\"7：（可选）添加非 root 用户到 Docker 组\"></a>7：（可选）添加非 root 用户到 Docker 组</h3><p>为了避免每次运行 Docker 命令时都使用 <code>sudo</code>，您可以将您的用户添加到 <code>docker</code> 组：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo usermod -aG docker <span class=\"variable\">$USER</span></span><br></pre></td></tr></table></figure>\n\n<p>这里的 <code>-aG</code> 选项意味着将用户添加到 <code>docker</code> 组并保留其在其他组的成员资格。注销并重新登录后，您可以以非 root 用户身份运行 Docker 命令。</p>\n","excerpt":"","more":"<h2 id=\"一、Docker学习记录\"><a href=\"#一、Docker学习记录\" class=\"headerlink\" title=\"一、Docker学习记录\"></a>一、Docker学习记录</h2><p>对于刚开始学习 Docker 的初学者来说，以下是一系列推荐的步骤和概念，可以帮助您建立对 Docker 的基本理解并开始实践：</p>\n<h3 id=\"1-理解-Docker-的基本概念\"><a href=\"#1-理解-Docker-的基本概念\" class=\"headerlink\" title=\"1. 理解 Docker 的基本概念\"></a>1. 理解 Docker 的基本概念</h3><ul>\n<li><strong>容器（Containers）</strong>：轻量级、可执行的独立软件包，包含运行应用所需的一切：代码、运行时、库、环境变量和配置文件。</li>\n<li><strong>镜像（Images）</strong>：容器的蓝图，包含创建容器所需的指令。</li>\n<li><strong>Dockerfile</strong>：一种脚本，包含了一系列指令和步骤，用于创建 Docker 镜像。</li>\n</ul>\n<h3 id=\"2-运行您的第一个容器\"><a href=\"#2-运行您的第一个容器\" class=\"headerlink\" title=\"2. 运行您的第一个容器\"></a>2. 运行您的第一个容器</h3><ul>\n<li><p>通过运行一个简单的容器来开始，例如 hello-world镜像：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run hello-world</span><br></pre></td></tr></table></figure>\n\n<p>这个命令会下载一个测试镜像并在容器中运行它。</p>\n</li>\n</ul>\n<h3 id=\"3-学习-Docker-基本命令\"><a href=\"#3-学习-Docker-基本命令\" class=\"headerlink\" title=\"3. 学习 Docker 基本命令\"></a>3. 学习 Docker 基本命令</h3><ul>\n<li>熟悉常用的 Docker 命令：<ul>\n<li><code>docker run</code>：运行一个容器。</li>\n<li><code>docker ps</code>：列出运行中的容器。</li>\n<li><code>docker images</code>：列出本地存储的镜像。</li>\n<li><code>docker pull</code>：从 Docker Hub 下载一个镜像。</li>\n<li><code>docker build</code>：根据 Dockerfile 构建一个新镜像。</li>\n<li><code>docker rm</code>：删除一个或多个容器。</li>\n<li><code>docker rmi</code>：删除一个或多个镜像。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-实践构建自己的-Docker-镜像\"><a href=\"#4-实践构建自己的-Docker-镜像\" class=\"headerlink\" title=\"4. 实践构建自己的 Docker 镜像\"></a>4. 实践构建自己的 Docker 镜像</h3><ul>\n<li>学习编写 Dockerfile 并构建自己的镜像：<ul>\n<li>创建一个简单的 Dockerfile，例如，设置基础镜像，复制文件，设置工作目录和启动命令。</li>\n<li>使用 <code>docker build</code> 命令构建镜像。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-学习容器的网络和存储\"><a href=\"#5-学习容器的网络和存储\" class=\"headerlink\" title=\"5. 学习容器的网络和存储\"></a>5. 学习容器的网络和存储</h3><ul>\n<li>了解如何使用 Docker 网络来连接容器。</li>\n<li>学习如何使用卷（Volumes）持久化容器数据。</li>\n</ul>\n<h3 id=\"6-使用-Docker-Compose\"><a href=\"#6-使用-Docker-Compose\" class=\"headerlink\" title=\"6. 使用 Docker Compose\"></a>6. 使用 Docker Compose</h3><ul>\n<li>Docker Compose 允许您使用 YAML 文件定义多容器应用。</li>\n<li>学习编写 <code>docker-compose.yml</code> 文件并使用 <code>docker-compose up</code> 和 <code>docker-compose down</code> 来管理应用。</li>\n</ul>\n<h2 id=\"二、安装docker\"><a href=\"#二、安装docker\" class=\"headerlink\" title=\"二、安装docker\"></a>二、安装docker</h2><p>在 CentOS 7.8 上使用阿里云的 Docker 仓库来安装 Docker，您可以按照以下步骤进行：</p>\n<h3 id=\"1：安装必要的依赖包\"><a href=\"#1：安装必要的依赖包\" class=\"headerlink\" title=\"1：安装必要的依赖包\"></a>1：安装必要的依赖包</h3><p>首先，安装一些必要的软件包，这些软件包允许您通过 HTTPS 使用仓库：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2：设置阿里云-Docker-仓库\"><a href=\"#2：设置阿里云-Docker-仓库\" class=\"headerlink\" title=\"2：设置阿里云 Docker 仓库\"></a>2：设置阿里云 Docker 仓库</h3><p>要使用阿里云的 Docker 仓库，您需要添加阿里云的 Docker 仓库地址。通常，您可以在阿里云的容器服务页面获取专属于您账户的 Docker 仓库地址。以下是一个示例命令，但请使用您的实际阿里云 Docker 仓库地址：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3：安装-Docker-Engine\"><a href=\"#3：安装-Docker-Engine\" class=\"headerlink\" title=\"3：安装 Docker Engine\"></a>3：安装 Docker Engine</h3><p>现在，从阿里云仓库安装 Docker：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4：启动-Docker\"><a href=\"#4：启动-Docker\" class=\"headerlink\" title=\"4：启动 Docker\"></a>4：启动 Docker</h3><p>安装完成后，启动 Docker 服务：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl start docker</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5：验证安装\"><a href=\"#5：验证安装\" class=\"headerlink\" title=\"5：验证安装\"></a>5：验证安装</h3><p>运行 hello-world 镜像来验证 Docker 是否正确安装，通常在这里是不会有信息响应，因为还需要拉取镜像：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run hello-world</span><br></pre></td></tr></table></figure>\n\n<p>如果能看到欢迎信息，说明 Docker 已经正确安装和运行。</p>\n<h3 id=\"6：使-Docker-开机自启\"><a href=\"#6：使-Docker-开机自启\" class=\"headerlink\" title=\"6：使 Docker 开机自启\"></a>6：使 Docker 开机自启</h3><p>为了确保 Docker 在启动时自动启动，请使用：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> docker</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7：（可选）添加非-root-用户到-Docker-组\"><a href=\"#7：（可选）添加非-root-用户到-Docker-组\" class=\"headerlink\" title=\"7：（可选）添加非 root 用户到 Docker 组\"></a>7：（可选）添加非 root 用户到 Docker 组</h3><p>为了避免每次运行 Docker 命令时都使用 <code>sudo</code>，您可以将您的用户添加到 <code>docker</code> 组：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo usermod -aG docker <span class=\"variable\">$USER</span></span><br></pre></td></tr></table></figure>\n\n<p>这里的 <code>-aG</code> 选项意味着将用户添加到 <code>docker</code> 组并保留其在其他组的成员资格。注销并重新登录后，您可以以非 root 用户身份运行 Docker 命令。</p>\n"},{"title":"Nginx基础知识","date":"2024-01-20T14:31:50.000Z","_content":"\n## 一、Nginx安装\n\n在 CentOS 7.8 上安装 Nginx 通常分为几个步骤：\n\n### 1. 更新系统\n\n在开始之前，最好确保所有的系统软件都是最新的。打开终端并输入以下命令来更新您的系统：\n\n```sh\nsudo yum update\n```\n\n这个命令会更新系统中所有已安装的软件包到最新版本。\n\n### 2. 添加 EPEL 仓库\n\n由于 Nginx 不包含在 CentOS 的默认 YUM 仓库中，您需要添加 EPEL（Extra Packages for Enterprise Linux）仓库来获取 Nginx 的软件包。运行以下命令添加 EPEL 仓库：\n\n```sh\nsudo yum install epel-release\n```\n\n### 3. 安装 Nginx\n\n现在 EPEL 仓库已经添加，您可以安装 Nginx 了。使用以下命令安装：\n\n```sh\nsudo yum install nginx\n```\n\n### 4. 启动 Nginx 服务\n\n安装完成后，您需要启动 Nginx 服务。使用以下命令：\n\n```sh\nsudo systemctl start nginx\n```\n\n### 5. 自动启动 Nginx\n\n为了确保 Nginx 在每次系统启动时自动运行，使用以下命令：\n\n```sh\nsudo systemctl enable nginx\n```\n\n### 6. 调整防火墙设置\n\n如果您的服务器运行的是 firewalld（CentOS 7 的默认防火墙），您需要允许 HTTP 和 HTTPS 流量。运行以下命令来更新防火墙设置：\n\n```sh\nsudo firewall-cmd --permanent --zone=public --add-service=http\nsudo firewall-cmd --permanent --zone=public --add-service=https\nsudo firewall-cmd --reload\n```\n\n### 7. 验证 Nginx 安装\n\n在浏览器中输入您服务器的 IP 地址。如果 Nginx 安装成功，您应该会看到 Nginx 的默认欢迎页面。\n\n### 8. 配置 Nginx（可选）\n\nNginx 的主配置文件位于 `/etc/nginx/nginx.conf`。您可能需要根据您的需求来编辑此文件。网站的配置文件通常位于 `/etc/nginx/conf.d/` 目录中。\n\n\n\n## 二、Nginx的配置文件\n\n已经成功的安装了Nginx，以下是对配置文件的解释说明。\n","source":"_posts/Nginx.md","raw":"---\ntitle: Nginx基础知识\ndate: 2024-01-20 22:31:50\ntags:\n---\n\n## 一、Nginx安装\n\n在 CentOS 7.8 上安装 Nginx 通常分为几个步骤：\n\n### 1. 更新系统\n\n在开始之前，最好确保所有的系统软件都是最新的。打开终端并输入以下命令来更新您的系统：\n\n```sh\nsudo yum update\n```\n\n这个命令会更新系统中所有已安装的软件包到最新版本。\n\n### 2. 添加 EPEL 仓库\n\n由于 Nginx 不包含在 CentOS 的默认 YUM 仓库中，您需要添加 EPEL（Extra Packages for Enterprise Linux）仓库来获取 Nginx 的软件包。运行以下命令添加 EPEL 仓库：\n\n```sh\nsudo yum install epel-release\n```\n\n### 3. 安装 Nginx\n\n现在 EPEL 仓库已经添加，您可以安装 Nginx 了。使用以下命令安装：\n\n```sh\nsudo yum install nginx\n```\n\n### 4. 启动 Nginx 服务\n\n安装完成后，您需要启动 Nginx 服务。使用以下命令：\n\n```sh\nsudo systemctl start nginx\n```\n\n### 5. 自动启动 Nginx\n\n为了确保 Nginx 在每次系统启动时自动运行，使用以下命令：\n\n```sh\nsudo systemctl enable nginx\n```\n\n### 6. 调整防火墙设置\n\n如果您的服务器运行的是 firewalld（CentOS 7 的默认防火墙），您需要允许 HTTP 和 HTTPS 流量。运行以下命令来更新防火墙设置：\n\n```sh\nsudo firewall-cmd --permanent --zone=public --add-service=http\nsudo firewall-cmd --permanent --zone=public --add-service=https\nsudo firewall-cmd --reload\n```\n\n### 7. 验证 Nginx 安装\n\n在浏览器中输入您服务器的 IP 地址。如果 Nginx 安装成功，您应该会看到 Nginx 的默认欢迎页面。\n\n### 8. 配置 Nginx（可选）\n\nNginx 的主配置文件位于 `/etc/nginx/nginx.conf`。您可能需要根据您的需求来编辑此文件。网站的配置文件通常位于 `/etc/nginx/conf.d/` 目录中。\n\n\n\n## 二、Nginx的配置文件\n\n已经成功的安装了Nginx，以下是对配置文件的解释说明。\n","slug":"Nginx","published":1,"updated":"2024-01-20T15:31:32.906Z","_id":"clrm844j1000110tlfro33mdo","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"一、Nginx安装\"><a href=\"#一、Nginx安装\" class=\"headerlink\" title=\"一、Nginx安装\"></a>一、Nginx安装</h2><p>在 CentOS 7.8 上安装 Nginx 通常分为几个步骤：</p>\n<h3 id=\"1-更新系统\"><a href=\"#1-更新系统\" class=\"headerlink\" title=\"1. 更新系统\"></a>1. 更新系统</h3><p>在开始之前，最好确保所有的系统软件都是最新的。打开终端并输入以下命令来更新您的系统：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum update</span><br></pre></td></tr></table></figure>\n\n<p>这个命令会更新系统中所有已安装的软件包到最新版本。</p>\n<h3 id=\"2-添加-EPEL-仓库\"><a href=\"#2-添加-EPEL-仓库\" class=\"headerlink\" title=\"2. 添加 EPEL 仓库\"></a>2. 添加 EPEL 仓库</h3><p>由于 Nginx 不包含在 CentOS 的默认 YUM 仓库中，您需要添加 EPEL（Extra Packages for Enterprise Linux）仓库来获取 Nginx 的软件包。运行以下命令添加 EPEL 仓库：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install epel-release</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-安装-Nginx\"><a href=\"#3-安装-Nginx\" class=\"headerlink\" title=\"3. 安装 Nginx\"></a>3. 安装 Nginx</h3><p>现在 EPEL 仓库已经添加，您可以安装 Nginx 了。使用以下命令安装：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install nginx</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-启动-Nginx-服务\"><a href=\"#4-启动-Nginx-服务\" class=\"headerlink\" title=\"4. 启动 Nginx 服务\"></a>4. 启动 Nginx 服务</h3><p>安装完成后，您需要启动 Nginx 服务。使用以下命令：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl start nginx</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-自动启动-Nginx\"><a href=\"#5-自动启动-Nginx\" class=\"headerlink\" title=\"5. 自动启动 Nginx\"></a>5. 自动启动 Nginx</h3><p>为了确保 Nginx 在每次系统启动时自动运行，使用以下命令：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> nginx</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-调整防火墙设置\"><a href=\"#6-调整防火墙设置\" class=\"headerlink\" title=\"6. 调整防火墙设置\"></a>6. 调整防火墙设置</h3><p>如果您的服务器运行的是 firewalld（CentOS 7 的默认防火墙），您需要允许 HTTP 和 HTTPS 流量。运行以下命令来更新防火墙设置：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo firewall-cmd --permanent --zone=public --add-service=http</span><br><span class=\"line\">sudo firewall-cmd --permanent --zone=public --add-service=https</span><br><span class=\"line\">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-验证-Nginx-安装\"><a href=\"#7-验证-Nginx-安装\" class=\"headerlink\" title=\"7. 验证 Nginx 安装\"></a>7. 验证 Nginx 安装</h3><p>在浏览器中输入您服务器的 IP 地址。如果 Nginx 安装成功，您应该会看到 Nginx 的默认欢迎页面。</p>\n<h3 id=\"8-配置-Nginx（可选）\"><a href=\"#8-配置-Nginx（可选）\" class=\"headerlink\" title=\"8. 配置 Nginx（可选）\"></a>8. 配置 Nginx（可选）</h3><p>Nginx 的主配置文件位于 <code>/etc/nginx/nginx.conf</code>。您可能需要根据您的需求来编辑此文件。网站的配置文件通常位于 <code>/etc/nginx/conf.d/</code> 目录中。</p>\n<h2 id=\"二、Nginx的配置文件\"><a href=\"#二、Nginx的配置文件\" class=\"headerlink\" title=\"二、Nginx的配置文件\"></a>二、Nginx的配置文件</h2><p>已经成功的安装了Nginx，以下是对配置文件的解释说明。</p>\n","excerpt":"","more":"<h2 id=\"一、Nginx安装\"><a href=\"#一、Nginx安装\" class=\"headerlink\" title=\"一、Nginx安装\"></a>一、Nginx安装</h2><p>在 CentOS 7.8 上安装 Nginx 通常分为几个步骤：</p>\n<h3 id=\"1-更新系统\"><a href=\"#1-更新系统\" class=\"headerlink\" title=\"1. 更新系统\"></a>1. 更新系统</h3><p>在开始之前，最好确保所有的系统软件都是最新的。打开终端并输入以下命令来更新您的系统：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum update</span><br></pre></td></tr></table></figure>\n\n<p>这个命令会更新系统中所有已安装的软件包到最新版本。</p>\n<h3 id=\"2-添加-EPEL-仓库\"><a href=\"#2-添加-EPEL-仓库\" class=\"headerlink\" title=\"2. 添加 EPEL 仓库\"></a>2. 添加 EPEL 仓库</h3><p>由于 Nginx 不包含在 CentOS 的默认 YUM 仓库中，您需要添加 EPEL（Extra Packages for Enterprise Linux）仓库来获取 Nginx 的软件包。运行以下命令添加 EPEL 仓库：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install epel-release</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-安装-Nginx\"><a href=\"#3-安装-Nginx\" class=\"headerlink\" title=\"3. 安装 Nginx\"></a>3. 安装 Nginx</h3><p>现在 EPEL 仓库已经添加，您可以安装 Nginx 了。使用以下命令安装：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install nginx</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-启动-Nginx-服务\"><a href=\"#4-启动-Nginx-服务\" class=\"headerlink\" title=\"4. 启动 Nginx 服务\"></a>4. 启动 Nginx 服务</h3><p>安装完成后，您需要启动 Nginx 服务。使用以下命令：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl start nginx</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-自动启动-Nginx\"><a href=\"#5-自动启动-Nginx\" class=\"headerlink\" title=\"5. 自动启动 Nginx\"></a>5. 自动启动 Nginx</h3><p>为了确保 Nginx 在每次系统启动时自动运行，使用以下命令：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> nginx</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-调整防火墙设置\"><a href=\"#6-调整防火墙设置\" class=\"headerlink\" title=\"6. 调整防火墙设置\"></a>6. 调整防火墙设置</h3><p>如果您的服务器运行的是 firewalld（CentOS 7 的默认防火墙），您需要允许 HTTP 和 HTTPS 流量。运行以下命令来更新防火墙设置：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo firewall-cmd --permanent --zone=public --add-service=http</span><br><span class=\"line\">sudo firewall-cmd --permanent --zone=public --add-service=https</span><br><span class=\"line\">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-验证-Nginx-安装\"><a href=\"#7-验证-Nginx-安装\" class=\"headerlink\" title=\"7. 验证 Nginx 安装\"></a>7. 验证 Nginx 安装</h3><p>在浏览器中输入您服务器的 IP 地址。如果 Nginx 安装成功，您应该会看到 Nginx 的默认欢迎页面。</p>\n<h3 id=\"8-配置-Nginx（可选）\"><a href=\"#8-配置-Nginx（可选）\" class=\"headerlink\" title=\"8. 配置 Nginx（可选）\"></a>8. 配置 Nginx（可选）</h3><p>Nginx 的主配置文件位于 <code>/etc/nginx/nginx.conf</code>。您可能需要根据您的需求来编辑此文件。网站的配置文件通常位于 <code>/etc/nginx/conf.d/</code> 目录中。</p>\n<h2 id=\"二、Nginx的配置文件\"><a href=\"#二、Nginx的配置文件\" class=\"headerlink\" title=\"二、Nginx的配置文件\"></a>二、Nginx的配置文件</h2><p>已经成功的安装了Nginx，以下是对配置文件的解释说明。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}